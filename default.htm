<!DOCTYPE HTML><html><head><title>CSI Sherlock</title>
<meta name = "viewport" content = "user-scalable=no,width=device-width" />

<script language="Javascript">
var appname='csisherlock'
var appversion='3.0 (20141118)'
var restartconfirmationrequired=1
var adfrequency=1
var adsrequired=1

// window.onbeforeunload=checkforunload;

function checkforunload()
{
if (restartconfirmationrequired==1) 
{
return " "
}

}

function documentwrite(someitem)
{
document.write(someitem)
}

var screenwidth=window.innerWidth
var screenheight=window.innerHeight
var overallwidthscale=screenwidth/240
var overallheightscale=screenheight/360
if (overallwidthscale<overallheightscale) {scalef=Math.floor(10*overallwidthscale)/10} else {scalef=Math.floor(10*overallheightscale)/10}
var scalef
if (scalef<1.0) {scalef=1.0}


documentwrite('<style type="text/css">      \nbody {color: black; background-color: white; font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; text-align: left}      \nh1 {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: bold; font-style: normal; text-align: left} \nh2 {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: italic; text-align: left} \np {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; text-align: left} \ndt {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; text-align: left} \ndd {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; text-align: left} \nli {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; text-align: left} \ntable {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; text-align: left} \ntd {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; } \ntextarea {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; overflow:hidden;} \ninput {font-family: sans-serif; font-size: '+(scalef*10)+'px; font-weight: normal; font-style: normal; }  \n * {-webkit-tap-highlight-color: rgba(0, 0, 0, 0);}\n</style> \n')


</script>

</head>
<body onLoad="runonload()" TOPMARGIN=0 LEFTMARGIN=0 MARGINHEIGHT=0 MARGINWIDTH=0 style="background-color:white; width:100%; height:100%">
<script language="JavaScript">

// Local storage
// SetLocalVal and GetLocalVal - use cookies of available, if not local storage
// Reason: for testing, local storage doesn't seem to work.  On devices, local storage works but not always cookies.  Should cover everything.

var daystoExpire = 2000;
var expirydate = new Date(); 
expirydate.setTime(expirydate.getTime() + (daystoExpire*24*60*60*1000));


function GetCookie(name) 
{  
var thecookie=document.cookie
var namestring = name+'='  
var cookieval = null
var cookievalbeg=-1
var cookievalend=thecookie.length
for (var beg=0; beg<thecookie.length; beg++)
{
var end=beg+namestring.length
if (thecookie.substring(beg, end) == namestring)
{
cookievalbeg=end
}
}
if (cookievalbeg > -1)
{
cookievalend=thecookie.indexOf(';', cookievalbeg) // look for next ; after beginning of value
if (cookievalend == -1) (cookievalend = thecookie.length)
cookieval = unescape(thecookie.substring(cookievalbeg, cookievalend))
} 

return cookieval
}


function SetCookie(name, val) 
{  
var cookiestring = name+'='+escape(val)+'; expires='+ expirydate.toGMTString()
document.cookie=cookiestring
}

var usecookies=0

function SetLocalVal(somename, someval)
{
if (usecookies==1) 
{
SetCookie(somename, someval)
}
else
{
localStorage.setItem(somename, someval)
}
}

function GetLocalVal(somename)
{
if (usecookies==1) 
{
return GetCookie(somename)
}
else
{
return localStorage.getItem(somename)
}
}

// end Local Storage




function continueafterad()
{
showingads=0
newgame()

}

function changetextvalue(someitem, someval)
{
document.getElementById(someitem).innerHTML = someval
}

function genintegers(somenum)
{
var someresult=[]
for (var i=1; i<=somenum; i++)
{
someresult[i-1]=i
}
return someresult
}

function member(someitem, somelist)
{
for (var i=0; i<somelist.length; i++)
{
if (someitem==somelist[i]) {return true}
}
return false
}

function randomnumber(num) {
// returns a random number from 1 to num
var ran=Math.round(Math.random()*num)
if (ran == 0) {ran = num}  // ran initially 0 to num - but 0 and num have half the probability of the other numbers
return ran
}

function shufflearray(somearray)
{

var temparray=somearray
var shuffled=new Array()
var packsize=somearray.length
var ran

for (var i=0; i<packsize; i++)
{
ran = randomnumber(temparray.length)
shuffled[i] = temparray[ran-1]
temparray = removeElement(ran-1, temparray)
}
return shuffled
}

function removeElement(index, somearray)
{
var beg=somearray.slice(0, index)
var end=[]
if (index+1 < somearray.length) {end = somearray.slice(index+1)}
return beg.concat(end)
}

function removeitem(someitem, somearray)
{
var somebeg=[]
var someend=[]
for (var i=0; i<somearray.length; i++)
{
if (somearray[i]==someitem) {return somearray.slice(0, i).concat(somearray.slice(i+1))}
}
return somearray
}

function copylist(somelist)
{
var somereturn=[]
for (var i=0; i<somelist.length; i++)
{
somereturn[i]=somelist[i]
}
return somereturn
}

var timer = null
var timeron = 0

var countdown=0
var basetimeavailable=[150, 180, 210]


function stoptimer()
{
timeron=0
SetLocalVal('timeron', timeron)

if (timer != null) {clearTimeout(timer)}
}

function blanktimer()
{
document.getElementById('timerdisplay').style.backgroundColor='black'
changetextvalue('timerdisplay', '');


}

function starttimer()
{
if (timer != null) {clearTimeout(timer)}
timeron=1
SetLocalVal('timeron', timeron)
countdown=basetimeavailable[thelevel]
document.getElementById('timerdisplay').style.backgroundColor='lime'
SetLocalVal('countdown', countdown)
changetextvalue('timerdisplay', countdown);
timer = setTimeout("runtimer()",1000);
}

function runtimer()
{
countdown=countdown-1
if (countdown==0) {document.getElementById('timerdisplay').style.backgroundColor='red'}
changetextvalue('timerdisplay', countdown);
SetLocalVal('countdown', countdown)

if (countdown > -999) {timer = setTimeout("runtimer()",1000);}

}




</script>
<script language="Javascript">

var errortimer
var level=2
var thelevel

var playstatus='none'
var availablesuspects=['Ben', 'Caz', 'Dan', 'Jen', 'Kim', 'Lee', 'Pat', 'Raj', 'Sam', 'Tom']
var availableweapons=['Axe', 'Chainsaw', 'Bat', 'Poison', 'Gun', 'Hammer', 'Knife', 'Rope', 'Wrench', 'Snake']
var availablerooms=['Bar', 'Laundry', 'Bathroom', 'Garden', 'Restaurant', 'Music', 'Kitchen', 'Games', 'Lounge', 'Library']
var colorsfor=[['Axe', 'green'], ['Rope', 'gold'], ['Bat', 'lightgreen'], ['Poison', 'yellow'], ['Gun', 'lightblue'], ['Knife', 'red'], ['Wrench', 'teal'], ['Chainsaw', 'purple'], ['Hammer', 'blue'], ['Snake', 'orange'], ['Games', 'purple'], ['Music', 'gold'], ['Library', 'lightblue'], ['Bar', 'orange'], ['Restaurant', 'red'], ['Lounge', 'yellow'], ['Garden', 'green'], ['Kitchen', 'white'], ['Bathroom', 'blue'], ['Laundry', 'teal'], ['Vic', 'black'], ['Ben', 'red'], ['Caz', 'yellow'], ['Dan', 'purple'], ['Jen', 'gold'], ['Kim', 'orange'], ['Lee', 'lightblue'], ['Pat', 'lightgreen'], ['Raj', 'blue'], ['Sam', 'teal'], ['Tom', 'green']]
var keynum
var victim='Vic'
var options
var explanation=[]
var explanationnew=[]
var maxdepth
var descend
var killer=''
var suspects=[]
var weapons=[]
var rooms=[]
var descend
var control
var negatives
var unused
var theoriginalproof
var scenario=[]
var victimscenario=[]
var killerscenario=[]
var approach=[]
var guesses=[]
var initialguesses=[]
var theproof=[]
var killercontrol
var victimcontrol
var shownproof=[]
var theaccused=[]
var thevictimindex
var thekillerindex
var explanationrecord=[]
var checkmade=0
var gameon=0
var newcluefailed=0
function newgame()
{
clearTimeout(errortimer)
restartconfirmationrequired=1
newcluefailed=0
playstatus='cast'
checkmade=0
thelevel=level
if (thelevel==-1) {thelevel=randomnumber(3)-1}
keynum=thelevel+5
suspects=shufflearray(availablesuspects).slice(0, keynum)
weapons=shufflearray(availableweapons).slice(0, keynum)
rooms=shufflearray(availablerooms).slice(0, keynum)
killer=shufflearray(suspects)[0]
theaccused=[unknownnamesanswer[0], unknownnamesanswer[1], unknownnamesanswer[2]]
options=[suspects, weapons, rooms]
explanation=[]
explanationnew=[]
explanationrecord=[]
maxdepth=thelevel-1
descend=randomnumber(2)-1
control=-1
negatives=0
// unused

theoriginalproof=[]
gameon=0
scenario=[]
victimscenario=[]
killerscenario=[]
approach=[]

for (var i=0; i<keynum; i++)
{
scenario[i]=[suspects[i], weapons[i], rooms[i], 'Y', '\r']
if (suspects[i]==killer) {victimscenario=[victim, weapons[i], rooms[i], 'Y', '\r']; killerscenario=[killer, weapons[i], rooms[i], 'Y', '\r']}
}
scenario=scenario.concat([victimscenario])
initialguesses=[]

// makeinitialguesses()
guesses=shufflearray(initialguesses)
suspects=shufflearray(suspects)
weapons=shufflearray(weapons)
rooms=shufflearray(rooms)
theproof=[]
shownproof=[]
if (descend==1) {killercontrol=2} else {killercontrol=randomnumber(2)} // ensures that partial and descend occurs, but only for killer.  Logic doesn't work for victim
victimcontrol=3-killercontrol
changetextvalue('leveldisplay', thelevel+1)
blanktimer()

createfullproof()

savethestate([1])

showintro()
}



function makeinitialguesses()
{

var someweapons=shufflearray(weapons)
var somerooms=shufflearray(rooms)
var check
for (var i=0; i<keynum; i++)
{
if (someweapons[i]==scenario[i][1] && somerooms[i]==scenario[i][2])
{
break
}
else
{
initialguesses[i]=[suspects[i], someweapons[i], somerooms[i]]
}
}

if (initialguesses.length==keynum)
{
}
else
{
makeinitialguesses()
}
}

function score(someguess)
{
var somescore=0
var somelocalscore
for (var i=0; i<scenario.length; i++)
{
somelocalscore=0
if (someguess[0]==scenario[i][0] && someguess[1]==scenario[i][1]) {somelocalscore++}
if (someguess[0]==scenario[i][0] && someguess[2]==scenario[i][2]) {somelocalscore++}
if (someguess[1]==scenario[i][1] && someguess[2]==scenario[i][2]) {somelocalscore++}
if (somelocalscore>somescore) {somescore=somelocalscore}
}
if (somescore==0) {return 'N'}
if (somescore==1) {return 'P'}
if (somescore==2) {return 'P'}
if (somescore==3) {return 'Y'}

}


function scoreguesses()
{
var somereturn=[]
for (var i=0; i<guesses.length; i++)
{
somereturn[i]=[guesses[i]+':'+score(guesses[i])+'\r']
}
return somereturn
}

var threepairs=[[0,1], [0,2], [1,2]]

function addproof(somescenario)
{
for (var i=0; i<theproof.length; i++)
{
if (somescenario[0]==theproof[i][0] && somescenario[1]==theproof[i][1] && somescenario[2]==theproof[i][2])
{return}
}
var somescore=score(somescenario)
if (somescore != somescenario[3]) 
{
// alert([somescenario, somescore ,'\r\r', scenario])
}
theproof=theproof.concat([copylist(somescenario)])
theoriginalproof=theoriginalproof.concat([copylist(somescenario)])
}

var unknownnames=['Person', 'Weapon', 'Place']
var unknownnamesanswer=['Suspect', 'Weapon', 'Place']

function newexplanationtriple(somescenario, somepair)
{
var somereturn=copylist(somescenario)
var someindex=thirdindex(somepair)
somereturn[someindex]=unknownnames[someindex]
return somereturn.slice(0,3)

}

function produceproof(somescenario, somecontrol)
{

var someapproaches=shufflearray(threepairs)
provepairindirectly(copylist(somescenario), someapproaches[0], somecontrol)
provepairindirectly(copylist(somescenario), someapproaches[1], somecontrol)
explanation[explanation.length]=[somescenario[someapproaches[0][0]]+':'+somescenario[someapproaches[0][1]]+' + '+somescenario[someapproaches[1][0]]+':'+somescenario[someapproaches[1][1]],somescenario[0]+':'+somescenario[1]+':'+somescenario[2]]
explanationnew[explanationnew.length]=[[newexplanationtriple(somescenario, someapproaches[0]), newexplanationtriple(somescenario, someapproaches[1])], copylist(somescenario).slice(0,3), 'Direct']
}

function thirdindex(somepair)
{for (var i=0; i<3; i++)
{
if (member(i, somepair)==false) {return i}
}
}


function provepairindirectly(somescenario, somepair, somecontrol)
{
control++
if (descend==control && somecontrol<=maxdepth) // time to descend.  Note: controls ensure you don't descend for victim - no good (see note below)
{
partialanddescend(copylist(somescenario), somepair, somecontrol)
}
else
{
var someapproach
var someapproaches
if (negatives==1) {someapproaches=[1,2,4,5]} else {someapproaches=[1,2,3,4,5]} // don't allow negatives if already done so.
if (somescenario[0]==victim) {someapproaches=removeitem(1, someapproaches)} // for victim, one partial plus proving third item has some other relationship does not prove the other two's relationship
someapproach=shufflearray(someapproaches)[0]
if (someapproach==1) {partialanddirect(copylist(somescenario), somepair, somecontrol)}
if (someapproach==2) {threepartials(copylist(somescenario), somepair, somecontrol)}
if (someapproach==3) {provepairbyeliminatingalternatives(copylist(somescenario), somepair, somecontrol)}
if (someapproach==4) {partial2Ns(copylist(somescenario), somepair, somecontrol)}
if (someapproach==5) {twopartials2Ns(copylist(somescenario), somepair, somecontrol)}

}
}

function twopartials2Ns(somescenario, somepair, somecontrol)
{
// first get a partial
var someindex=thirdindex(somepair)
var someitem=somescenario[someindex]
var sometriple=[0,0,0, 'P', '\r']
for (var i=0; i<somepair.length; i++)
{
sometriple[somepair[i]]=somescenario[somepair[i]]
}

var someremainingoptions=options[someindex]
someremainingoptions=removeitem(someitem, someremainingoptions)
someremainingoptions=removeitem(killerscenario[someindex], someremainingoptions)
someremainingoptions=removeitem(victimscenario[someindex], someremainingoptions)

someitem=shufflearray(someremainingoptions)[0]

sometriple[someindex]=someitem
addproof(sometriple)
// next find one N involving one of the other pairs
var some3pairs=[[0,1], [0, 2], [1,2]]
var somepairs=[]
for (var i=0; i<some3pairs.length; i++)
{
if (some3pairs[i][0]!=somepair[0] || some3pairs[i][1]!=somepair[1])
{
somepairs=somepairs.concat([some3pairs[i]])
}
}
var somenewpair
var someotherindex
var somenegtriple
var someotherlist
var someother
somepairs=shufflearray(somepairs)


somenewpair=somepairs[0]
someotherindex=thirdindex(somenewpair)
somenegtriple=copylist(sometriple)
somenegtriple[3]='N'
for (var i=0; i<options[someotherindex].length; i++)
{
somenegtriple[someotherindex]=options[someotherindex][i]
if (score(somenegtriple)=='N') {addproof(somenegtriple);break}

}



var somepartexplanation=[copylist(sometriple), copylist(somenegtriple)]



// now add one more partial
someremainingoptions=removeitem(someitem, someremainingoptions)
someitem=shufflearray(someremainingoptions)[0]
sometriple[someindex]=someitem
addproof(sometriple)


// next find one N involving one of the other pairs


somenegtriple=copylist(sometriple)
somenegtriple[3]='N'
for (var i=0; i<options[someotherindex].length; i++)
{
somenegtriple[someotherindex]=options[someotherindex][i]
if (score(somenegtriple)=='N') {addproof(somenegtriple);break}

}



explanation[explanation.length]=[somepartexplanation[0][0]+':'+somepartexplanation[0][1]+':'+somepartexplanation[0][2]+':P + '+sometriple[0]+':'+sometriple[1]+':'+sometriple[2]+':P + Ns:<br>'+somepartexplanation[0][somenewpair[0]]+':'+somepartexplanation[0][somenewpair[1]]+' + '+sometriple[somenewpair[0]]+':'+sometriple[somenewpair[1]], sometriple[somepair[0]]+':'+sometriple[somepair[1]]]
explanationnew[explanationnew.length]=[[somepartexplanation[0], copylist(sometriple), somepartexplanation[1], copylist(somenegtriple)], newexplanationtriple(somescenario, somepair), '2 Ps + 2 Ns']

}



function partial2Ns(somescenario, somepair, somecontrol)
{
// first get a partial
var someindex=thirdindex(somepair)
var someitem=somescenario[someindex]
var sometriple=[0,0,0, 'P', '\r']
for (var i=0; i<somepair.length; i++)
{
sometriple[somepair[i]]=somescenario[somepair[i]]
}

var someremainingoptions=options[someindex]
someremainingoptions=removeitem(someitem, someremainingoptions)
someremainingoptions=removeitem(killerscenario[someindex], someremainingoptions)
someremainingoptions=removeitem(victimscenario[someindex], someremainingoptions)

someitem=shufflearray(someremainingoptions)[0]

sometriple[someindex]=someitem
addproof(sometriple)
// next find two Ns involving the other two pairs
var some3pairs=[[0,1], [0, 2], [1,2]]
var somepairs=[]
for (var i=0; i<some3pairs.length; i++)
{
if (some3pairs[i][0]!=somepair[0] || some3pairs[i][1]!=somepair[1])
{
somepairs=somepairs.concat([some3pairs[i]])
}
}
var somenewpair
var someotherindex
var somenegtriple
var someotherlist
var someother
var somenegtriples=[]
for (var j=0; j<2; j++)
{
somenewpair=somepairs[j]
someotherindex=thirdindex(somenewpair)
somenegtriple=copylist(sometriple)
somenegtriple[3]='N'
for (var i=0; i<options[someotherindex].length; i++)
{
somenegtriple[someotherindex]=options[someotherindex][i]
if (score(somenegtriple)=='N') {addproof(somenegtriple);break}

}
somenegtriples[j]=copylist(somenegtriple)
} // end for

explanation[explanation.length]=[sometriple[0]+':'+sometriple[1]+':'+sometriple[2]+':P + Ns:<br>'+sometriple[somepairs[0][0]]+':'+sometriple[somepairs[0][1]]+' + '+sometriple[somepairs[1][0]]+':'+sometriple[somepairs[1][1]], sometriple[somepair[0]]+':'+sometriple[somepair[1]]]
explanationnew[explanationnew.length]=[[copylist(sometriple), somenegtriples[0], somenegtriples[1]], newexplanationtriple(somescenario, somepair), 'P + 2 Ns']

}

function partialanddescend(somescenario, somepair, somecontrol)
{
// first get a partial
var someindex=thirdindex(somepair)
var someitem=somescenario[someindex]
var sometriple=[0,0,0, 'P', '\r']
for (var i=0; i<somepair.length; i++)
{
sometriple[somepair[i]]=somescenario[somepair[i]]
}

var someremainingoptions=options[someindex]
someremainingoptions=removeitem(someitem, someremainingoptions)
someremainingoptions=removeitem(killerscenario[someindex], someremainingoptions)
someremainingoptions=removeitem(victimscenario[someindex], someremainingoptions)

someitem=shufflearray(someremainingoptions)[0]

sometriple[someindex]=someitem
addproof(sometriple)
// then prove the third has true relationship indirectly

var somefact
for (var i=0; i<scenario.length; i++)
{
if (scenario[i][someindex]==someitem)
{
somefact=copylist(scenario[i]); break
}
}
descend++
produceproof(copylist(somefact), somecontrol+1)
explanation[explanation.length]=[sometriple[0]+':'+sometriple[1]+':'+sometriple[2]+':P + '+somefact[0]+':'+somefact[1]+':'+somefact[2],somescenario[somepair[0]]+':'+somescenario[somepair[1]]]
explanationnew[explanationnew.length]=[[copylist(sometriple), copylist(somefact).slice(0,3)], newexplanationtriple(somescenario, somepair), 'P + Proved true relationships for '+someitem]


}

function partialanddirect(somescenario, somepair, somecontrol)
{
// first get a partial
var someindex=thirdindex(somepair)
var someitem=somescenario[someindex]
var sometriple=[0,0,0, 'P', '\r']
for (var i=0; i<somepair.length; i++)
{
sometriple[somepair[i]]=somescenario[somepair[i]]
}

var someremainingoptions=options[someindex]
someremainingoptions=removeitem(someitem, someremainingoptions)
someremainingoptions=removeitem(killerscenario[someindex], someremainingoptions)
someremainingoptions=removeitem(victimscenario[someindex], someremainingoptions)
someitem=shufflearray(someremainingoptions)[0]

sometriple[someindex]=someitem
addproof(sometriple)
// then prove the third has true relationship directly

var somefact
for (var i=0; i<scenario.length; i++)
{
if (scenario[i][someindex]==someitem)
{
somefact=copylist(scenario[i]); break
}
}
// show a fact involving the item, which removes all other possibilities
addproof(somefact)
explanation[explanation.length]=[sometriple[0]+':'+sometriple[1]+':'+sometriple[2]+':P + '+somefact[0]+':'+somefact[1]+':'+somefact[2]+':Y', somescenario[somepair[0]]+':'+somescenario[somepair[1]]]
explanationnew[explanationnew.length]=[[copylist(sometriple), copylist(somefact)], newexplanationtriple(somescenario, somepair), 'P + Given true relationships for '+someitem]

}

function threepartials(somescenario, somepair, somecontrol)
{
var someindex=thirdindex(somepair)
var someitem=somescenario[someindex]
var sometriple=[0,0,0, 'P', '\r']
var sometriples=[]
for (var i=0; i<somepair.length; i++)
{
sometriple[somepair[i]]=somescenario[somepair[i]]
}

var someremainingoptions=options[someindex]
someremainingoptions=removeitem(someitem, someremainingoptions)
someremainingoptions=removeitem(killerscenario[someindex], someremainingoptions)
someremainingoptions=removeitem(victimscenario[someindex], someremainingoptions)
someitem=shufflearray(someremainingoptions)[0]
sometriple[someindex]=someitem
addproof(sometriple)
sometriples[0]=copylist(sometriple)
// now add two more partials
someremainingoptions=removeitem(someitem, someremainingoptions)
someitem=shufflearray(someremainingoptions)[0]
sometriple[someindex]=someitem
addproof(sometriple)
sometriples[1]=copylist(sometriple)

someremainingoptions=removeitem(someitem, someremainingoptions)
someitem=shufflearray(someremainingoptions)[0]
sometriple[someindex]=someitem
addproof(sometriple)
sometriples[2]=copylist(sometriple)

explanation[explanation.length]=['3 Ps with '+somescenario[somepair[0]]+':'+somescenario[somepair[1]],somescenario[somepair[0]]+':'+somescenario[somepair[1]]]
explanationnew[explanationnew.length]=[sometriples, newexplanationtriple(somescenario, somepair), '3 Ps']

}

var textforoptions=['suspects', 'weapons', 'locations']
var textforoptionsingle=['suspect', 'weapon', 'location']


function provepairbyeliminatingalternatives(somescenario, somepair, somecontrol)
{
negatives=1
var someran
if (somescenario[0]==victim) {someran=0} else {someran=randomnumber(2)-1} // must make sure victim is named for negatives
var someindexfixed=somepair[someran]
var somefixed=somescenario[someindexfixed]

var someindexvar=somepair[1-someran]
var somevar=somescenario[someindexvar]
var someotherindex=thirdindex(somepair)
var somenegtriple=[0,0,0, 'N', '\r']
somenegtriple[someindexfixed]=somefixed
var somenewtriple=copylist(somenegtriple)
var someotherlist
var someother
var somenegtriples=[]
var someoptions=shufflearray(copylist(options[someindexvar]))

for (var i=0; i<someoptions.length; i++)
{
if (someoptions[i] != somevar)
{
somenewtriple[someindexvar]=someoptions[i]
someotherlist=shufflearray(copylist(options[someotherindex]))
for (var j=0; j<someotherlist.length; j++)
{
somenewtriple[someotherindex]=someotherlist[j]
if (score(somenewtriple)=='N') {break}
}
somenegtriples[somenegtriples.length]=copylist(somenewtriple)
}
}

// now replace one of the negative triples by a positive.  Do this only for a scenario not involving victim
if (somescenario[0]!=victim)
{
somenegtriples=shufflearray(somenegtriples)
var somefirsttriple=somenegtriples[0]
somenegtriples=somenegtriples.slice(1)
// must show that the item at someindexvar of somefirsttriple has a relationship with a different item at someindexfixed.  Can only do this if the item at someindexvar is not a member of killerscenario
if (somefirsttriple[someindexvar]==killerscenario[someindexvar]) // so, if it is, just keep the negative triple
{
somenegtriples=somenegtriples.concat([somefirsttriple])
}
else
{
for (var i=0; i<scenario.length; i++)
{
if (scenario[i][someindexvar]==somefirsttriple[someindexvar])
{
somenegtriples=somenegtriples.concat([copylist(scenario[i])])
break
}
}
}
}
// end of replacement

for (var i=0; i<somenegtriples.length; i++)
{
addproof(somenegtriples[i])
}
var somepairtext=somefixed+':'+somevar
if (someindexfixed>someindexvar) {somepairtext=somevar+':'+somefixed}
explanation[explanation.length]=[somefixed+': '+(keynum-1)+' '+' of '+keynum+' '+textforoptions[someindexvar]+' N', somepairtext]
explanationnew[explanationnew.length]=[somenegtriples, newexplanationtriple(somescenario, somepair), 'Elimination']

}



function createfullproof()
{
var someapproaches

explanation[explanation.length]=['<b><i>Killer focus:</i></b>','']

if (killercontrol==2)
{
someapproaches=shufflearray(threepairs).slice(0, killercontrol)
for (var i=0; i<someapproaches.length; i++)
{
provepairindirectly(killerscenario, someapproaches[i], 0)
}
somescenario=killerscenario
explanation[explanation.length]=[somescenario[someapproaches[0][0]]+':'+somescenario[someapproaches[0][1]]+' + '+somescenario[someapproaches[1][0]]+':'+somescenario[someapproaches[1][1]],somescenario[0]+':'+somescenario[1]+':'+somescenario[2]]
explanationnew[explanationnew.length]=[[newexplanationtriple(somescenario, someapproaches[0]), newexplanationtriple(somescenario, someapproaches[1])], copylist(somescenario).slice(0,3), 'Direct']

}
else // if only doing proof of one pair for killer, ensure killer is named
{
someapproaches=shufflearray(threepairs)
for (var i=0; i<someapproaches.length; i++)
{
if (someapproaches[i][0]==0)
{
provepairindirectly(killerscenario, someapproaches[i], 0)

break
}
}
}
proofrecord[0]=theproof.length
explanation[explanation.length]=['<b><i>Victim focus:</i></b>','']
// explanationnew[explanationnew.length]='Victim'
thekillerindex=explanationnew.length-1
if (victimcontrol==2)
{
someapproaches=shufflearray(threepairs).slice(0, victimcontrol)
for (var i=0; i<someapproaches.length; i++)
{
provepairindirectly(victimscenario, someapproaches[i], 0)
}
somescenario=victimscenario
explanation[explanation.length]=[somescenario[someapproaches[0][0]]+':'+somescenario[someapproaches[0][1]]+' + '+somescenario[someapproaches[1][0]]+':'+somescenario[someapproaches[1][1]],somescenario[0]+':'+somescenario[1]+':'+somescenario[2]]
explanationnew[explanationnew.length]=[[newexplanationtriple(somescenario, someapproaches[0]), newexplanationtriple(somescenario, someapproaches[1])], copylist(somescenario).slice(0,3), 'Direct']

}
else // if only doing proof of one pair for victim, ensure victim is named
{
someapproaches=shufflearray(threepairs)
for (var i=0; i<someapproaches.length; i++)
{
if (someapproaches[i][0]==0)
{
provepairindirectly(victimscenario, someapproaches[i], 0)

break
}
}
}


baseproofs=theproof.length
proofrecord[1]=theproof.length
// next add in any names that haven't been used
/*
unused=[[],[],[]]
for (var i=0; i<unused.length; i++)
{
for (var j=0; j<options[i].length; j++)
{
var somecheck=0
for (var k=0; k<theproof.length; k++)
{
if (options[i][j]==theproof[k][i]) {somecheck=1}
}
if (somecheck==0) {unused[i]=unused[i].concat([options[i][j]])}
}
}
var maxmissing=0
var sometriple=[0,0,0, 0, '\r']
var someitem
for (var i=0; i<unused.length; i++)
{
if (unused[i].length>maxmissing) {maxmissing=unused[i].length}
}
for (var i=0; i<maxmissing; i++)
{
for (var j=0; j<unused.length; j++)
{
if (i<unused[j].length)
{
someitem=unused[j][i]
}
else
{
someitem=shufflearray(removeitem(killerscenario[j], options[j]))[0]
}
sometriple[j]=someitem
}
sometriple[3]=score(sometriple)
addproof(sometriple)
}

unused=[[],[],[]]
for (var i=0; i<unused.length; i++)
{
for (var j=0; j<options[i].length; j++)
{
var somecheck=0
for (var k=0; k<theproof.length; k++)
{
if (options[i][j]==theproof[k][i]) {somecheck=1}
}
if (somecheck==0) {unused[i]=unused[i].concat([options[i][j]])}
}
}
while(theproof.length/2!=Math.round(theproof.length/2))
{
for (var i=0; i<options.length; i++)
{
sometriple[i]=shufflearray(removeitem(killerscenario[i], options[i]))[0]
}
sometriple[3]=score(sometriple)
if (sometriple[3]!='Y') {addproof(sometriple)}
}
*/
// next add in three Ps for Vic/Killer/weapon/location to add to confusion.  
/*
var someaddins=[[killer, victim, victim], [killer, victim, victim]][randomnumber(2)-1]
var somepool=theproof.concat(shufflearray(scenario))
var somelength=somepool.length
var somevadd
var somevcount=0
for (var i=0; i<somelength; i++)
{
somevadd=copylist(somepool[i])
somevadd[0]=someaddins[somevcount]
if (score(somevadd)=='P' && alreadyinproof(somevadd)==false && somevadd[1]!=killerscenario[1] && somevadd[2]!=killerscenario[2])
{
somevadd[3]='P'
addproof(somevadd)
somevcount++
if (somevcount==3) {break}
}

}
*/
var someaddins=shufflearray([0,1,2,3]).slice(0,3)
var somepool
var someind
var somevadd
var someindcheck
for (var i=0; i<someaddins.length; i++)
{
someindcheck=0
somepool=shufflearray(scenario)
someind=someaddins[i]
for (var j=0; j<somepool.length; j++)
{
somevadd=copylist(somepool[j])
if (somevadd[2]!=killerscenario[2]) // just checks we haven't selected the victim or killer scenario
{
if (someind==3)
{
somevadd[0]=victim
}
else
{
somevadd[someind]=killerscenario[someind]
}
if (alreadyinproof(somevadd)==false)
{
somevadd[3]='P'
addproof(somevadd)
someindcheck=1
}

}
if (someindcheck==1) {break}
}

}



var numys=0
for (var i=0; i<theproof.length; i++)
{
if (theproof[i][3]=='Y')
{
numys++
}
}
// check to make sure we haven't both proved a triple as well as given it directly as Y
var theYs=[]
for (var i=0; i<theproof.length; i++)
{

if (theproof[i][3]=='Y') {theYs=theYs.concat([[theproof[i][0], theproof[i][1], theproof[i][2]]])}
}
var somedoubleproof=0
var someitems=[]
for (var i=0; i<explanation.length; i++)
{
if (explanation[i][1].length>0)
{
var someitems=explanation[i][1].split(':')
for (var j=0; j<theYs.length; j++)
{
if (allitemsonlist(someitems, theYs[j])==true)
{
// alert([i, theYs[j], explanation[i][1]])
somedoubleproof=1
}
}
}
}

if ((keynum-numys)<3 || somedoubleproof==1)
{
// alert('again')
// document.location.href=document.location.href
newgame()
}
else
{
// alert(theproof)
theproof=shufflearray(theproof)
// createthebooktext()
// alert([scenario, '\rKiller\r', killerscenario, '\rProof '+controlrecord+' '+baseproofs+' '+theproof.length+'\r', theproof, '\r\r', unused])
}
}

function allitemsonlist(someitems, somelist)
{
for (var i=0; i<someitems.length; i++)
{
if (member(someitems[i], somelist)==false) {return false}
}
return true
}

function alreadyinproof(somescenario)
{
for (var i=0; i<theproof.length; i++)
{
if (somescenario[0]==theproof[i][0] && somescenario[1]==theproof[i][1] && somescenario[2]==theproof[i][2])
{return true}
}
return false
}

function lasttext(somelargetext, somesmalltext)
{
if (somesmalltext.length>somelargetext.length) {return false}
var somestart=somelargetext.length-somesmalltext.length
if (somelargetext.slice(somestart)==somesmalltext) {return true}


return false

}


var proofrecord=[0,0]
var baseproofs
var controlrecord=descend

// alert(guesses)
// alert([scenario, '\rKiller\r', killerscenario, '\rProof '+controlrecord+' '+baseproofs+' '+theproof.length+'\r', theproof, '\r\r', unused])






function createthebooktext()
{
var somebooktext=''
somebooktext=somebooktext+'<p style="text-align:center;color:black;font-weight:bold">Whodunit</p>'
somebooktext=somebooktext+'<table align=center border=0 cellpadding=2 cellspacing=0 style="color:black;font-weight:bold; text-align:left">'
var someval
for (var i=0; i<theproof.length; i++)
{
somebooktext=somebooktext+'<tr>'

somebooktext=somebooktext+'<td ><span style="color:darkblue">'+theproof[i][0]+'</span></td>'+'<td ><span style="color:darkred">'+theproof[i][1]+'</span></td>'+'<td ><span style="color:green">'+theproof[i][2]+'</span></td>'+'<td >'+theproof[i][3]+'</td>'

somebooktext=somebooktext+'</tr>'
}
somebooktext=somebooktext+'</table>'
somebooktext=somebooktext+'<p align=center style="text-align:center;color:black;font-weight:normal">'+keynum+' locations with suspect + weapon.<br>Vic is with his killer in one.<br>Who killed Vic with what and where?</p>'

somebooktext=somebooktext+'<p align=center style="text-align:center;color:black;font-weight:normal">Suggested time: '+basetimeavailable+' secs</p>'
/*
// now show original, unsorted proof+ answer (victim first)
theproof=theoriginalproof.slice(proofrecord[0], proofrecord[1]).concat(theoriginalproof.slice(0, proofrecord[0])).concat(theoriginalproof.slice(proofrecord[1]))

somebooktext=somebooktext+'pagebreakhere<p style="text-align:center;color:black;font-weight:bold">Solution</p>'
somebooktext=somebooktext+'<table align=center border=0 cellpadding=2 cellspacing=0 style="color:black;font-weight:bold; text-align:left">'
var someval
for (var i=0; i<theproof.length/2; i++)
{
somebooktext=somebooktext+'<tr>'

somebooktext=somebooktext+'<td >'+theproof[2*i][0]+'</td>'+'<td >'+theproof[2*i][1]+'</td>'+'<td >'+theproof[2*i][2]+'</td>'+'<td >'+theproof[2*i][3]+'</td>'+'<td >&nbsp;</td>'+'<td >'+theproof[2*i+1][0]+'</td>'+'<td >'+theproof[2*i+1][1]+'</td>'+'<td >'+theproof[2*i+1][2]+'</td>'+'<td >'+theproof[2*i+1][3]+'</td>'

somebooktext=somebooktext+'</tr>'
}
somebooktext=somebooktext+'</table>'

somebooktext=somebooktext+'<br><br><table align=center border=0 cellpadding=2 cellspacing=0 style="color:black;font-weight:bold; text-align:left">'
somebooktext=somebooktext+'<tr>'

somebooktext=somebooktext+'<td >'+killerscenario[0]+'</td>'+'<td >'+killerscenario[1]+'</td>'+'<td >'+killerscenario[2]+'</td>'

somebooktext=somebooktext+'</tr>'

somebooktext=somebooktext+'</table>'
*/
somebooktext=somebooktext+'pagebreakhere<p style="text-align:center;color:black;font-weight:bold">Solution</p>'
somebooktext=somebooktext+'<p style="color:black;font-weight:bold; text-align:center">'


somebooktext=somebooktext+'<span style="color:darkblue">'+killerscenario[0]+'</span><span style="font-weight:normal"> with the </span>'+'<span style="color:darkred">'+killerscenario[1]+'</span><span style="font-weight:normal"> in the </span>'+'<span style="color:green">'+killerscenario[2]+'</span>'
somebooktext=somebooktext+'</p>'




somebooktext=somebooktext+determineexplanationtext()+'<br><br>'+determinenewexplanationtext()
changetextvalue('output', somebooktext)

// parent.onetext=somebooktext
// parent.continuebook()

}

function determinenewexplanationtext()
{


var somenewexplanation=[]
var someindex
for (var i=0; i<explanationnew.length; i++)
{
if (explanationnew[i]=='Victim') {someindex=i; break}
}
somenewexplanation=explanationnew.slice(someindex+1).concat(explanationnew.slice(0, someindex))
explanationnew=somenewexplanation

var somenewtext=''
for (var i=0; i<explanationnew.length; i++)
{
for (var j=0; j<explanationnew[i][0].length; j++)
{
somenewtext=somenewtext+explanationnew[i][0][j]+'<br>'

}
somenewtext=somenewtext+'v<br>'
somenewtext=somenewtext+explanationnew[i][1]+'<br>'
somenewtext=somenewtext+explanationnew[i][2]+'<br>'
}
return somenewtext
}




function determineexplanationtext()
{
var somenewexplanation=[]
var someindex
for (var i=0; i<explanation.length; i++)
{
if (explanation[i][0]=='<b><i>Victim focus:</i></b>') {someindex=i; break}
}
somenewexplanation=explanation.slice(someindex+1).concat(explanation.slice(0, someindex))
explanation=somenewexplanation
sometext=''
sometext=sometext+'<table width=100% border=0 align=center style="text-align:left;font-size:15pt;color:black;font-weight:normal">'
for (var i=0; i<explanation.length; i++)
{
sometext=sometext+'<tr><td valign=bottom>'+explanation[i][0]+'</td><td valign=bottom>'+explanation[i][1]+'</td></tr>'
}

sometext=sometext+'</table>'
return sometext
}

var timer=null
var gamescheck=0
function generategames()
{
newgame()
var somecheck0=0
var somecheck1=0
var somecheck2=0
gamescheck++
for (var i=0; i<theproof.length; i++)
{
if (theproof[i][0]==killerscenario[0])
{
somecheck0=1
}
if (theproof[i][1]==killerscenario[1])
{
somecheck1=1
}
if (theproof[i][2]==killerscenario[2])
{
somecheck2=1
}
}
var sumcheck=somecheck0+somecheck1+somecheck2
if (sumcheck==3)
{
if (timer != null) {clearTimeout(timer)}
timer = setTimeout("generategames()",10);
}
else
{
// alert(gamescheck)
}

}

function colorfor(someitem)
{
for (var i=0; i<colorsfor.length; i++)
{
if (colorsfor[i][0]==someitem) {return colorsfor[i][1]}
}
}

function textcolorfor(someitem)
{
if (someitem=='Vic') {return 'white'}
return 'black'
}

function graphicfor(somename)
{

if (member(somename, availablesuspects)==true || somename=='Vic') {return '<div style="position:relative"><img width='+Math.floor(scalef*50)+' src="'+colorfor(somename)+'button.png"><div style="position:absolute;top:0px;left:0px;width:'+Math.floor(scalef*50)+';height:'+Math.floor(scalef*25)+'"><table width='+Math.floor(scalef*50)+' height='+Math.floor(scalef*25)+' border=0 cellspacing=0 cellpadding=0 align=center valign=middle><tr height='+Math.floor(scalef*25)+'><td width='+Math.floor(scalef*25)+' valign=middle align=right><img width='+Math.floor(scalef*20)+' src="'+somename+'.png" align=right valign=middle></td><td align=center valign=middle style="color:'+textcolorfor(somename)+'">'+somename+'</td></tr></table></div></div>'}
if (member(somename, availablerooms)==true) {return '<div style="position:relative"><img width='+Math.floor(scalef*50)+' src="'+colorfor(somename)+'button.png"><div style="position:absolute;top:0px;left:0px;width:100%;height:'+Math.floor(scalef*25)+'"><table width=100% height=100% border=0 cellspacing=0 cellpadding=0 align=center valign=middle><tr height='+Math.floor(scalef*25)+'><td align=center valign=middle><img height='+Math.floor(scalef*20)+' src="'+somename+'.png" valign=middle></td></tr></table></div></div>'}
if (member(somename, availableweapons)==true) {return '<div style="position:relative"><img width='+Math.floor(scalef*50)+' src="'+colorfor(somename)+'button.png"><div style="position:absolute;top:0px;left:0px;width:100%;height:'+Math.floor(scalef*25)+'"><table width=100% height=100% border=0 cellspacing=0 cellpadding=0 align=center valign=middle><tr height='+Math.floor(scalef*25)+'><td align=center valign=middle><img height='+Math.floor(scalef*20)+' src="'+somename+'.png" valign=middle></td></tr></table></div></div>'}
if (member(somename, ['New', 'Settings', 'Level', 'Cast', 'Clues', 'Answer', 'Help', 'Confirm', 'Focus', 'Facts', 'Back', 'Reload'])==true) {return '<div style="position:relative"><img width='+Math.floor(scalef*50)+' src="greybluebutton.png"><div style="position:absolute;top:0px;left:0px;width:100%;height:100%"><table border=0 cellspacing=0 cellpadding=0 align=center valign=middle><tr height='+Math.floor(scalef*25)+'><td align=center valign=middle style="text-align:center;font-weight:bold;color:white">'+somename+'</td></tr></table></div></div>'}
if (member(somename, unknownnames.concat(unknownnamesanswer))==true) {return '<div style="position:relative"><img width='+Math.floor(scalef*50)+' src="greybutton.png"><div style="position:absolute;top:0px;left:0px;width:100%;height:100%"><table border=0 cellspacing=0 cellpadding=0 align=center valign=middle><tr height='+Math.floor(scalef*25)+'><td align=center valign=middle style="text-align:center;font-weight:bold;color:white">'+somename+'</td></tr></table></div></div>'}
if (somename=='Correct') {return '<table border=0 cellspacing=0 cellpadding=0 align=left valign=middle style="background-color:green"><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*50)+' style="text-align:center;font-weight:bold">Correct</td></tr></table>'}
if (somename=='Wrong') {return '<table border=0 cellspacing=0 cellpadding=0 align=left valign=middle style="background-color:red"><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*50)+' style="text-align:center;font-weight:bold">Wrong</td></tr></table>'}
if (somename=='Finger') {return '<div style="position:relative"><img width='+Math.floor(scalef*50)+' src="finger.png"><div style="position:absolute;top:0px;left:0px;width:100%;height:100%"></div></div>'}
if (somename=='Check') {return '<div onClick="checkanswer()" style="position:relative"><img width='+Math.floor(scalef*50)+' src="greybluebutton.png"><div style="position:absolute;top:0px;left:0px;width:100%;height:100%"><table border=0 cellspacing=0 cellpadding=0 align=center valign=middle><tr height='+Math.floor(scalef*25)+'><td align=center valign=middle style="text-align:center;font-weight:bold;color:white">'+somename+'</td></tr></table></div></div>'}



if (somename=='P') {return '<table border=0 cellspacing=0 cellpadding=0 align=left valign=middle style="background-color:yellow"><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*15)+' style="text-align:center;font-weight:bold">&nbsp;P</td><td width='+Math.floor(scalef*35)+' style="text-align:right;font-weight:bold">(1/3)&nbsp;</td></tr></table>'}
if (somename=='N') {return '<table border=0 cellspacing=0 cellpadding=0 align=left valign=middle style="background-color:red"><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*15)+' style="text-align:center;font-weight:bold">&nbsp;N</td><td width='+Math.floor(scalef*35)+' style="text-align:right;font-weight:bold">(0/3)&nbsp;</td></tr></table>'}
if (somename=='Y') {return '<table border=0 cellspacing=0 cellpadding=0 align=left valign=middle style="background-color:green"><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*15)+' style="text-align:center;font-weight:bold">&nbsp;Y</td><td width='+Math.floor(scalef*35)+' style="text-align:right;font-weight:bold">(3/3)&nbsp;</td></tr></table>'}

if (somename=='LP') {return '<table border=0 cellspacing=0 cellpadding=0 align=left valign=middle style="background-color:#FFFF88"><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*15)+' style="text-align:center;font-weight:bold">&nbsp;P</td><td width='+Math.floor(scalef*35)+' style="text-align:right;font-weight:bold">(1/3)&nbsp;</td></tr></table>'}
if (somename=='LN') {return '<table border=0 cellspacing=0 cellpadding=0 align=left valign=middle style="background-color:#FF8888"><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*15)+' style="text-align:center;font-weight:bold">&nbsp;N</td><td width='+Math.floor(scalef*35)+' style="text-align:right;font-weight:bold">(0/3)&nbsp;</td></tr></table>'}
if (somename=='LY') {return '<table border=0 cellspacing=0 cellpadding=0 align=left valign=middle style="background-color:#AAFFAA"><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*15)+' style="text-align:center;font-weight:bold">&nbsp;Y</td><td width='+Math.floor(scalef*35)+' style="text-align:right;font-weight:bold">(3/3)&nbsp;</td></tr></table>'}

if (somename=='T How') {return '<div style="position:relative"><img width='+Math.floor(scalef*50)+' src="greybluebutton.png"><div style="position:absolute;top:0px;left:0px;width:100%;height:100%"><table border=0 cellspacing=0 cellpadding=0 align=center valign=middle><tr height='+Math.floor(scalef*25)+'><td align=center valign=middle style="text-align:center;font-weight:bold;color:white">How</td></tr></table></div></div>'}
if (somename=='T Back') {return '<div style="position:relative"><img width='+Math.floor(scalef*50)+' src="greybluebutton.png"><div style="position:absolute;top:0px;left:0px;width:100%;height:100%"><table border=0 cellspacing=0 cellpadding=0 align=center valign=middle><tr height='+Math.floor(scalef*25)+'><td align=center valign=middle style="text-align:center;font-weight:bold;color:white">Back</td></tr></table></div></div>'}



if (somename=='blank') {return ''}

return '<b><span style="text-align:center">'+somename+'</span></b>'
}




function setupstatic()
{
documentwrite('<table border=0 align=center valign=top cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+'>')
documentwrite('<tr height='+Math.floor(scalef*25)+'><td width='+Math.floor(scalef*50)+' onClick="showad()">'+graphicfor('New')+'</td><td width='+Math.floor(scalef*10)+'></td><td width='+Math.floor(scalef*50)+' onClick="showhelp()">'+graphicfor('Help')+'</td><td width='+Math.floor(scalef*10)+'></td><td width='+Math.floor(scalef*50)+' onClick="showsettings()">'+graphicfor('Level')+'</td><td width='+Math.floor(scalef*10)+'></td><td width='+Math.floor(scalef*50)+'><table border=0 cellspacing=0 cellpadding=0 align=left valign=middle><tr><td height='+Math.floor(scalef*20)+' width='+Math.floor(scalef*15)+' style="text-align:center;font-weight:bold;background-color:yellow" id="leveldisplay">3</td><td width='+Math.floor(scalef*5)+'></td><td width='+Math.floor(scalef*30)+' id="timerdisplay" style="background-color:lime;text-align:center"></td></tr></table></td></tr>')
documentwrite('<tr height='+Math.floor(scalef*25)+'><td width='+Math.floor(scalef*50)+' onClick="showcast()">'+graphicfor('Cast')+'</td><td width='+Math.floor(scalef*10)+'></td><td width='+Math.floor(scalef*50)+' onClick="showclues()">'+graphicfor('Clues')+'</td><td width='+Math.floor(scalef*10)+'></td><td width='+Math.floor(scalef*50)+' onClick="focusclues()">'+graphicfor('Focus')+'</td><td width='+Math.floor(scalef*10)+'></td><td width='+Math.floor(scalef*50)+' onClick="submitanswer()">'+graphicfor('Answer')+'</td></tr>')
// documentwrite('<tr ><td colspan=7 id="currentadtext" style="text-align:left;color:black;background-color:white;font-size:'+Math.floor(scalef*10)+'px"></td></tr>')
documentwrite('<tr height='+Math.floor(scalef*25)+'><td colspan=7 ><table width=100% height=100% border=1 cellpadding=0 cellspacing=0><tr><td style="color:red;background-color:black;font-size:'+Math.floor(scalef*15)+'px;font-weight:bold;text-align:left" id="banner" >CSI Sherlock:</td></tr></table></td></tr>')
documentwrite('<tr ><td colspan=7 id="instructions" style="text-align:left;font-style:italic;color:black;background-color:white;font-size:'+Math.floor(scalef*9)+'px"></td></tr>')
documentwrite('<tr ><td colspan=7 id="output" style="text-align:left;color:black;background-color:white;font-size:'+Math.floor(scalef*10)+'px"></td></tr>')



documentwrite('</table>')

}

function createtriples(sometype)
{
if (sometype=='scenario')
{
return scenario
}
var sometriples=[]

for (var i=0; i<rooms.length; i++)
{

sometriples[i]=[suspects[i], weapons[i], rooms[i]]
}

if (sometype=='cast')
{
return sometriples.concat([[victim, 'blank', 'blank']])
}
if (sometype=='answer')
{
return sometriples
}
}

function separatorfor(sometype)
{
if (sometype=='cast') 
{return ' '}
else
{return ':'}

}


function checkanswer() 
{
stoptimer()
var someanswerstatus=0
explanationrecord=[]
if (killerscenario[0]==theaccused[0] && killerscenario[1]==theaccused[1] && killerscenario[2]==theaccused[2])
{
someanswerstatus=1
}
var sometext='<table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+' style="background-color:white">'

sometext=sometext+'<tr height='+Math.floor(scalef*25)+'>'

for (var j=0; j<3; j++)
{
sometext=sometext+'<td valign=middle align=center width='+Math.floor(scalef*50)+' >'+graphicfor(killerscenario[j])+'</td>'
if (j<2) {sometext=sometext+'<td width='+Math.floor(scalef*10)+' style="text-align:center">'+graphicfor(separatorfor('clues'))+'</td>'} else {sometext=sometext+'<td width='+Math.floor(scalef*10)+'></td>'}
}

sometext=sometext+'<td width='+Math.floor(scalef*50)+'>'+graphicfor('Correct')+'</td>'


sometext=sometext+'</tr>'

sometext=sometext+'</table>'
sometext=accuseddisplay(someanswerstatus)+sometext
sometext=sometext+'<table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+' style="background-color:white"><tr><td>because we can show</td></tr></table>'
thevictimindex=explanationnew.length-1 // final victim result is always last
var somevictimtriple=explanationnew[thevictimindex][1]
var somekillertriple=explanationnew[thekillerindex][1]
sometext=sometext+detailedexplanation([somevictimtriple, somekillertriple])
playstatus='check'
restartconfirmationrequired=0
changetextvalue('output', sometext)
savethestate(1)
changetextvalue('banner', 'CSI Sherlock: Check')
changetextvalue('instructions', 'Tap How for explanation here or later')
categorizeexplanation()
addremainingclues()
}

function categorizeexplanation()
{
// changes any scores for subsidiary proofs 
for (var i=0; i<explanationnew.length; i++)
{
for (var j=0; j<explanationnew[i][0].length; j++)
{
if (triplemember(explanationnew[i][0][j], shownproof)==false && member(explanationnew[i][0][j][3], ['P', 'Y', 'N']))
{
explanationnew[i][0][j][3]='L'+explanationnew[i][0][j][3]
}
}
}
}

function addremainingclues()
{
for (var i=0; i<theproof.length; i++)
{
if (triplemember(theproof[i], shownproof)==false)
{
// shownproof=shownproof.concat([theproof[i]])
shownproof=shownproof.concat([[theproof[i][0],theproof[i][1],theproof[i][2],'L'+theproof[i][3], ]])
}
}
checkmade=1
}

function detailedexplanation(somearray)
{
var sometext='<table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+'>'
for (var i=0; i<somearray.length; i++)
{
sometext=sometext+'<tr height='+Math.floor(scalef*25)+'>'

for (var j=0; j<3; j++)
{
sometext=sometext+'<td valign=middle align=center width='+Math.floor(scalef*50)+'>'+graphicfor(somearray[i][j])+'</td>'
if (j<2) {sometext=sometext+'<td width='+Math.floor(scalef*10)+' style="text-align:center">'+graphicfor(separatorfor('clues'))+'</td>'} else {sometext=sometext+'<td width='+Math.floor(scalef*10)+'></td>'}
}
if (somearray[i].length==3)  // so must be a positive proof
{
var someindex=explanationnewindex(somearray[i])
sometext=sometext+'<td width='+Math.floor(scalef*50)+' onClick="showexplanation('+someindex+')">'+graphicfor('T How')+'</td>'
}
else
{
sometext=sometext+'<td width='+Math.floor(scalef*50)+'>'+graphicfor(somearray[i][3])+'</td>'

}

sometext=sometext+'</tr>'

}
sometext=sometext+'<tr><td colspan=7 height='+Math.floor(scalef*10)+'></td></tr><tr><td></td><td></td><td width='+Math.floor(scalef*50)+' onClick="showscenario()">'+graphicfor('Facts')+'</td><td></td><td></td><td></td><td></td></tr></table>'
return sometext

}

function goback()
{
var someexlength=explanationrecord.length
if (someexlength==1) {checkanswer(); return}
var somenext=explanationrecord[someexlength-2]
explanationrecord=explanationrecord.slice(0, someexlength-2)
showexplanation(somenext)

}

function showexplanation(someindex)
{
explanationrecord=explanationrecord.concat([someindex])
var someconclusion=explanationnew[someindex][1]
var sometext='<table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+' style="background-color:white"><tr><td>We can show</td></tr></table>'

sometext=sometext+'<table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+' style="background-color:white">'

sometext=sometext+'<tr height='+Math.floor(scalef*25)+'>'
for (var j=0; j<3; j++)
{
sometext=sometext+'<td valign=middle align=center width='+Math.floor(scalef*50)+' >'+graphicfor(someconclusion[j])+'</td>'
if (j<2) {sometext=sometext+'<td width='+Math.floor(scalef*10)+' style="text-align:center">'+graphicfor(separatorfor('clues'))+'</td>'} else {sometext=sometext+'<td width='+Math.floor(scalef*10)+'></td>'}
}
if (someconclusion.length==3)
{
sometext=sometext+'<td width='+Math.floor(scalef*50)+' onClick="goback()">'+graphicfor('T Back')+'</td>'
}
else
{
sometext=sometext+'<td width='+Math.floor(scalef*50)+' onClick="goback()">'+graphicfor('F Back')+'</td>'
}

sometext=sometext+'</tr>'

sometext=sometext+'</table>'
var somebecause='because'
if (explanationnew[someindex][2]=='Elimination') {somebecause='by elimination because'}

sometext=sometext+'<table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+' style="background-color:white"><tr><td>'+somebecause+'</td></tr></table>'

sometext=sometext+detailedexplanation(explanationnew[someindex][0])
playstatus='check'
changetextvalue('output', sometext)

changetextvalue('banner', 'CSI Sherlock: Explanation')
changetextvalue('instructions', 'Tap Back to go back to higher level')

}

function explanationnewindex(sometriple)
{
for (var i=0; i<explanationnew.length; i++)
{
if (sometriple[0]==explanationnew[i][1][0] && sometriple[1]==explanationnew[i][1][1] && sometriple[2]==explanationnew[i][1][2])
{
return i
}
}
}

function donothing(somenum)
{}
function donothing2()
{}

function accuseddisplay(somenum)
{
var someaccused
if (theaccused[0]!=unknownnamesanswer[0] && theaccused[1]!=unknownnamesanswer[1] && theaccused[2]!=unknownnamesanswer[2])
{
someaccused='Check'

}
else
{
someaccused='Finger'
}
var someonclick
var somecheckclick
if (somenum==-1) {someonclick='undoaccused'; somecheckclick='checkanswer'} else {someonclick='donothing'}
if (somenum==0) {someaccused='Wrong'; somecheckclick='donothing2'} 
if (somenum==1) {someaccused='Correct'; somecheckclick='donothing2'} 

var sometext='<table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+' style="background-color:black"><tr height='+Math.floor(scalef*5)+'><td></td></tr></table><table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+' style="background-color:white">'

sometext=sometext+'<tr height='+Math.floor(scalef*25)+'>'

for (var j=0; j<3; j++)
{
sometext=sometext+'<td valign=middle align=center width='+Math.floor(scalef*50)+' onClick="'+someonclick+'('+j+')">'+graphicfor(theaccused[j])+'</td>'
if (j<2) {sometext=sometext+'<td width='+Math.floor(scalef*10)+' style="text-align:center">'+graphicfor(separatorfor('clues'))+'</td>'} else {sometext=sometext+'<td width='+Math.floor(scalef*10)+'></td>'}
}

// sometext=sometext+'<td width='+Math.floor(scalef*50)+' onClick="'+somecheckclick+'()">'+graphicfor(someaccused)+'</td>'
sometext=sometext+'<td width='+Math.floor(scalef*50)+'>'+graphicfor(someaccused)+'</td>'

sometext=sometext+'</tr>'

sometext=sometext+'</table><table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+' style="background-color:black"><tr height='+Math.floor(scalef*5)+'><td></td></tr></table>'
return sometext
}


function triplesdisplay(sometype, somearray)
{
var sometext='<table border=0 cellspacing=0 cellpadding=0 width='+Math.floor(scalef*230)+'>'
if (sometype=='cast')
{
sometext=sometext+'<tr><td valign=middle align=center width='+Math.floor(scalef*50)+'>'+graphicfor(unknownnames[0])+'</td><td width='+Math.floor(scalef*10)+'></td><td valign=middle align=center width='+Math.floor(scalef*50)+'>'+graphicfor(unknownnames[1])+'</td><td width='+Math.floor(scalef*10)+'></td><td valign=middle align=center width='+Math.floor(scalef*50)+'>'+graphicfor(unknownnames[2])+'</td><td width='+Math.floor(scalef*10)+'></td><td></td></tr>'

}
for (var i=0; i<somearray.length; i++)
{
sometext=sometext+'<tr height='+Math.floor(scalef*25)+'>'

for (var j=0; j<3; j++)
{
sometext=sometext+'<td valign=middle align=center width='+Math.floor(scalef*50)+' onClick="selectclue('+j+', \''+somearray[i][j]+'\')">'+graphicfor(somearray[i][j])+'</td>'
if (j<2) {sometext=sometext+'<td width='+Math.floor(scalef*10)+' style="text-align:center">'+graphicfor(separatorfor(sometype))+'</td>'} else {sometext=sometext+'<td width='+Math.floor(scalef*10)+'></td>'}
}
if (sometype=='cast') 
{
sometext=sometext+'<td width='+Math.floor(scalef*50)+'></td>'
}
if (sometype=='clues' || sometype=='scenario') 
{
sometext=sometext+'<td width='+Math.floor(scalef*50)+'>'+graphicfor(somearray[i][3])+'</td>'
}

sometext=sometext+'</tr>'

}
if (sometype=='scenario') {sometext=sometext+'<tr><td colspan=7 height='+Math.floor(scalef*10)+'></td></tr><tr><td></td><td></td><td width='+Math.floor(scalef*50)+' onClick="goback()">'+graphicfor('Back')+'</td><td></td><td></td><td></td><td></td></tr>'}

sometext=sometext+'</table>'
return sometext
}

function focusclues()
{
if (showingads==1) {return}
if (gameon==0) {begingame('focusclues');return}

if (shownproof.length>0)
{
playstatus='sort'
var sometext=triplesdisplay('clues', shownproof)

changetextvalue('output', sometext+'<table border=0 align=center><tr><td align=center><img src="magnifyingglass.png" width='+Math.floor(scalef*100)+' align=center></td></tr></table>')
changetextvalue('banner', 'CSI Sherlock: Focus Clues')
changetextvalue('instructions', 'Tap any item to bring associated clues to top')
}
savethestate(1)

}

function showclues()
{
if (showingads==1) {return}
clearTimeout(errortimer)
if (gameon==0) {begingame('showclues'); return}
if (playstatus=='clues' && newcluefailed==1) 
{
newcluefailed=0
var someoldinstructions=document.getElementById('instructions').innerHTML
changetextvalue('instructions', 'No associated clue available')
errortimer = setTimeout('restoreinstructions(\''+someoldinstructions+'\')',750)
return
}
if (shownproof.length>0)
{
playstatus='clues'
var sometext=triplesdisplay('clues', shownproof)

changetextvalue('output', sometext+'<span style="text-align:center"><div id="currentadtext" style="width:100%"></div><img src="sherlock.png" width='+Math.floor(scalef*230)+' align=center></span>')
if (adsrequired==1) {showcurrentad()}
changetextvalue('banner', 'CSI Sherlock: Clues')
if (checkmade==0)
{
changetextvalue('instructions', 'Tap item to see an associated clue if available')
}
else
{
changetextvalue('instructions', 'All clues being shown - tap Answer for explanation')
}
}
savethestate(1)

}

function restoreinstructions(somevalue)
{
changetextvalue('instructions', somevalue)
}

function triplemember(sometriple, sometriples)
{
for (var i=0; i<sometriples.length; i++)
{
if (sometriples[i][0]==sometriple[0] && sometriples[i][1]==sometriple[1] && sometriples[i][2]==sometriple[2])
return true
}
return false
}

function addclue(someindex, somename)
{
var someclues=[]
newcluefailed=1
for (var i=0; i<theproof.length; i++)
{
if (theproof[i][someindex]==somename && triplemember(theproof[i], shownproof)==false)
{
shownproof=[theproof[i]].concat(shownproof)
newcluefailed=0
break
}

}
}

function selectclue(someindex, somename)
{
if (member(somename, unknownnames.concat(unknownnamesanswer).concat(['blank'])) == true) {return}

if (playstatus=='clues')
{
addclue(someindex, somename)
showclues()

}

if (playstatus=='cast')
{
addclue(someindex, somename)
showclues()

}

if (playstatus=='sort')
{
var somebeg=[]
var someend=[]
for (var i=0; i<shownproof.length; i++)
{
if (shownproof[i][someindex]==somename)
{
somebeg=somebeg.concat([shownproof[i]])
}
else
{
someend=someend.concat([shownproof[i]])
}
}
shownproof=somebeg.concat(someend)

focusclues()

}

if (playstatus=='answer')
{
theaccused[someindex]=somename
submitanswer()
}

}

function undoaccused(someindex)
{
theaccused[someindex]=unknownnamesanswer[someindex]
submitanswer()

}


function submitanswer()
{
if (showingads==1) {return}
if (gameon==0) {begingame('submitanswer');return}
if (checkmade==0)
{
playstatus='answer'
var somecast=createtriples('answer')

var sometext=accuseddisplay(-1)+triplesdisplay('cast', somecast)

changetextvalue('output', sometext)

changetextvalue('banner', 'CSI Sherlock: Accuse')
changetextvalue('instructions', 'Tap an item to specify as part of answer')
}
else
{
checkanswer()

}
savethestate(1)

}

function showscenario()
{

var somecast=createtriples('scenario')
var sometext=triplesdisplay('scenario', somecast)
explanationrecord=explanationrecord.concat(['Facts'])
changetextvalue('output', sometext)

changetextvalue('banner', 'CSI Sherlock: Facts')
changetextvalue('instructions', 'Tap Back to return from list of all facts')
}

function showcast()
{
if (showingads==1) {return}

if (gameon==0) {begingame('showcast');return}
playstatus='cast'
var somecast=createtriples('cast')
var sometext=triplesdisplay('cast', somecast)

changetextvalue('output', sometext)

changetextvalue('banner', 'CSI Sherlock: Cast')
if (checkmade==0) {changetextvalue('instructions', 'Tap item to see an associated clue if available')} else {changetextvalue('instructions', 'Tap Answer to return to Check')}
savethestate(1)
}

function showsettings()
{
if (showingads==1) {return}
var sometext=''
sometext=sometext+'<br><b>Level</b><br><br>1 (easiest) to 3 (hardest)<br>? selects 1-3 randomly when New tapped.<br><br><table border=1 align=center><tr height='+Math.floor(scalef*25)+'><td valign=middle style="color:red;text-align:center;font-weight:bold;width:'+Math.floor(scalef*30)+'px;background-color:white" onClick="setlevel(0)" id="level0">1</td><td valign=middle style="color:red;text-align:center;font-weight:bold;width:'+Math.floor(scalef*30)+'px;background-color:white" onClick="setlevel(1)" id="level1">2</td><td valign=middle style="color:red;text-align:center;font-weight:bold;width:'+Math.floor(scalef*30)+'px;background-color:white" onClick="setlevel(2)" id="level2">3</td><td valign=middle style="color:red;text-align:center;font-weight:bold;width:'+Math.floor(scalef*30)+'px;background-color:white" onClick="setlevel(-1)"  id="level-1">?</td></tr></table>'
changetextvalue('output', sometext)

changetextvalue('banner', 'CSI Sherlock: Level')
var someinstructions='Select the desired level'
if (gameon==0) {someinstructions='Select the desired level'}

changetextvalue('instructions', someinstructions)
document.getElementById('level'+level).style.backgroundColor='black'


}

function setlevel(somenum)
{
level=somenum
SetLocalVal('csilevel', level)
showsettings()
}

function showintro()
{

var sometext='<table width=100% valign=top align=center><tr><td align=center><img src="hotel.png" width='+Math.floor(scalef*170)+' onClick="begingame('+"'showcast'"+')" align=center><br><span style="font-weight:bold;text-align:center;color:red">Who killed Vic, with what, and where?</span><br><br><b>TopAccolades</b></span></td></tr></table>'
changetextvalue('output', sometext)
changetextvalue('banner', 'CSI Sherlock: Crime Scene')
changetextvalue('instructions', 'Tap hotel to see people, weapons & places')


}

function begingame(somefunction)
{
gameon=1
addclue(0, 'Vic')
starttimer()
eval(somefunction+'()')


}

function runonload()
{
// first deal with remoteads
eval(GetLocalVal('remoteads'))
if (GetLocalVal('csisherlockstatus')==null || GetLocalVal('csisherlockstatus')==-2) // first use
{
SetLocalVal('csisherlockstatus', -2)

continueafterad()

return
}
// above says always start a new puzzle when first loaded
// else just continue after setting saved state etc.
loadsavedstate()
continuegame()
// showad2()
}

function continuegame()
{
if (csisherlockstatus==1)  // probably not needed as only two states : -2 and 1
{

if (gameon==0 || playstatus=='none')
{
blanktimer()
showad2() 
return
}
// else gameon==1
if (countdown<=0) 
{document.getElementById('timerdisplay').style.backgroundColor='red'} 
else 
{document.getElementById('timerdisplay').style.backgroundColor='lime'} 
changetextvalue('timerdisplay', countdown);

changetextvalue('leveldisplay', thelevel+1);

if (timeron==1)
{
if (countdown > -999) {timer = setTimeout("runtimer()",1000);}
}

if (playstatus=='cast'){showcast(); return}
if (playstatus=='clues'){showclues(); return}
if (playstatus=='sort'){focusclues(); return}
if (playstatus=='answer'){submitanswer(); return}
if (playstatus=='check'){checkanswer(); return}


}
else // catch all to start a new game
{
blanktimer()
showad2() 
}
}

function convarraytostring(someobject)
{
var somereturn
if (someobject instanceof Array)
{
somereturn='['
for (var i=0; i<someobject.length; i++)
{
somereturn=somereturn+convarraytostring(someobject[i])
if (i<someobject.length-1)
{
somereturn=somereturn+', '
}
}
return somereturn+']'
}
else
{
if (someobject=='\r')
{return '"\\'+'r"'}
if (someobject=='\r\n')
{return '"\\'+'r\\'+'n"'}

return '"'+someobject+'"'
}

}



function savethestate(somestate)
{
csisherlockstatus=somestate

SetLocalVal('checkmade', checkmade)
SetLocalVal('playstatus', playstatus)
SetLocalVal('csilevel', level)
SetLocalVal('thelevel', thelevel)
SetLocalVal('countdown', countdown)
SetLocalVal('timeron', timeron)
SetLocalVal('gameon', gameon)
// SetLocalVal('restartconfirmationrequired', restartconfirmationrequired)
SetLocalVal('thekillerindex', thekillerindex)
SetLocalVal('suspects', convarraytostring(suspects))
SetLocalVal('weapons', convarraytostring(weapons))
SetLocalVal('rooms', convarraytostring(rooms))
SetLocalVal('killer', convarraytostring(killer))
SetLocalVal('killerscenario', convarraytostring(killerscenario))
SetLocalVal('victimscenario', convarraytostring(victimscenario))
SetLocalVal('scenario', convarraytostring(scenario))
SetLocalVal('theaccused', convarraytostring(theaccused))
SetLocalVal('theproof', convarraytostring(theproof))
SetLocalVal('shownproof', convarraytostring(shownproof))
SetLocalVal('guesses', convarraytostring(guesses))
SetLocalVal('explanationnew', convarraytostring(explanationnew))
SetLocalVal('csisherlockstatus', csisherlockstatus)

}

function loadsavedstate()
{
/*
// following for first use
if (GetLocalVal('checkmade')==null) {SetLocalVal('checkmade', checkmade)}
if (GetLocalVal('playstatus')==null) {SetLocalVal('playstatus', playstatus)}
if (GetLocalVal('csilevel')==null) {SetLocalVal('csilevel', level)}
if (GetLocalVal('thelevel')==null) {SetLocalVal('thelevel', thelevel)}
if (GetLocalVal('countdown')==null) {SetLocalVal('countdown', countdown)}
if (GetLocalVal('timeron')==null) {SetLocalVal('timeron', timeron)}
if (GetLocalVal('gameon')==null) {SetLocalVal('gameon', gameon)}
if (GetLocalVal('suspects')==null) {SetLocalVal('suspects', convarraytostring(suspects))}
if (GetLocalVal('weapons')==null) {SetLocalVal('weapons', convarraytostring(weapons))}
if (GetLocalVal('rooms')==null) {SetLocalVal('rooms', convarraytostring(rooms))}
if (GetLocalVal('killer')==null) {SetLocalVal('killer', convarraytostring(killer))}
if (GetLocalVal('killerscenario')==null) {SetLocalVal('killerscenario', convarraytostring(killerscenario))}
if (GetLocalVal('theaccused')==null) {SetLocalVal('theaccused', convarraytostring(theaccused))}
if (GetLocalVal('theproof')==null) {SetLocalVal('theproof', convarraytostring(theproof))}
if (GetLocalVal('shownproof')==null) {SetLocalVal('shownproof', convarraytostring(shownproof))}
if (GetLocalVal('guesses')==null) {SetLocalVal('guesses', convarraytostring(guesses))}
*/
// now load
csisherlockstatus=GetLocalVal('csisherlockstatus')*1
checkmade=GetLocalVal('checkmade')*1
playstatus=GetLocalVal('playstatus')
level=GetLocalVal('csilevel')*1
thelevel=GetLocalVal('thelevel')*1
countdown=GetLocalVal('countdown')*1
timeron=GetLocalVal('timeron')*1
gameon=GetLocalVal('gameon')*1
// restartconfirmationrequired=GetLocalVal('restartconfirmationrequired')*1
thekillerindex=GetLocalVal('thekillerindex')*1
suspects=eval(GetLocalVal('suspects'))
weapons=eval(GetLocalVal('weapons'))
rooms=eval(GetLocalVal('rooms'))
killer=GetLocalVal('killer')
killerscenario=eval(GetLocalVal('killerscenario'))
victimscenario=eval(GetLocalVal('victimscenario'))
scenario=eval(GetLocalVal('scenario'))
theaccused=eval(GetLocalVal('theaccused'))
theproof=eval(GetLocalVal('theproof'))
shownproof=eval(GetLocalVal('shownproof'))
explanationnew=eval(GetLocalVal('explanationnew'))
guesses=eval(GetLocalVal('guesses'))

}




function displayrestartconfirmation()
{
changetextvalue('output', '<table border=1 align=center width='+Math.floor(scalef*180)+' style="background-color:white;vertical-align:middle" valign=middle><tr><td align=center><br><img width='+Math.floor(scalef*100)+' src="csisherlockicon.png"><br><br>Please confirm that you wish to restart.  If not, tap any button on the second row above to continue.<br><br><table border=0 align=center><tr><td  onClick="continuerestartconfirmation()">'+graphicfor('Confirm')+'</td></tr></table></td></tr></table>')
changetextvalue('banner', 'CSI Sherlock: Restart')
changetextvalue('instructions', '&nbsp;')


}


function continuerestartconfirmation()
{
showad2() 
}

function showad()
{
if (gameon==1 && restartconfirmationrequired==1 && checkmade==0)
{
displayrestartconfirmation()
}
else
{
showad2()

}
}



var showingads=0
var thecdimage='<table style="background-color:red" valign=middle align=center border=0 cellpadding=0 cellspacing=0><tr height='+Math.floor(scalef*10)+' valign=bottom><td valign=bottom><img width='+Math.floor(scalef*10)+'   name="cd1" src="selected.gif" valign=bottom style="display:block"></td><td align=center valign=bottom><img valign=bottom align=center width='+Math.floor(scalef*10)+'   name="cd0" src="selected.gif" style="display:block"></td><td valign=bottom><img width='+Math.floor(scalef*10)+'   name="cd7" src="selected.gif"  valign=bottom style="display:block"></td></tr><tr height='+Math.floor(scalef*10)+' valign=middle><td valign=middle><img width='+Math.floor(scalef*10)+'   name="cd2" src="selected.gif" valign=middle style="display:block"></td><td align=center><img  width='+Math.floor(scalef*36)+' src="sherlock.png" border=0 style="display:block"></td><td valign=middle><img width='+Math.floor(scalef*10)+'   name="cd6" src="selected.gif" valign=middle style="display:block"></td></tr><tr height='+Math.floor(scalef*10)+' valign=middle><td><img width='+Math.floor(scalef*10)+'   name="cd3" src="selected.gif" valign=middle style="display:block"></td><td align=center valign=middle><img valign=middle align=center width='+Math.floor(scalef*10)+'   name="cd4" src="selected.gif" style="display:block"></td><td valign=middle><img width='+Math.floor(scalef*10)+'   name="cd5" src="selected.gif" valign=middle style="display:block"></td></tr></table>'

function showad2()
{
stoptimer()
blanktimer()
if (adsrequired==1)
{

gameon=0
SetLocalVal('gameon', gameon)
showingads=1
changetextvalue('output', '<p style="text-align:center">This free version of CSI Sherlock includes these ad breaks.<br><br>You can buy the full version of<p style="color:red;font-weight:bold;text-align:center">CSI Sherlock<br>'+thecdimage+'<p style="text-align:center">This, of course, has no ad breaks.<br><br>Also try other games & puzzles from TopAccolades<br><div id="currentadtext" style="width:100%"></div>')
changetextvalue('banner', 'CSI Sherlock: Ad Break')
changetextvalue('instructions', '&nbsp;')
// displayadnum=1
adcountdown(8)

}
else
{
continueafterad()
}

}

function showcountdownimages(somenum)
{
for (var i=0; i<8; i++)
{
document.images['cd'+i].src='adunselected.gif'
}
for (var i=0; i<somenum; i++)
{
document.images['cd'+i].src='adselected.gif'
}
}



var adtimer=null
function adcountdown(somenum)
{
showcurrentad()
showcountdownimages(somenum)
if (somenum==0)
{

continueafterad()

}
else
{
if (adtimer != null) {clearTimeout(adtimer)}
adtimer = setTimeout("adcountdown("+(somenum-1)+")",5000);
}
}

function showhelp()
{
if (showingads==1) {return}
var sometext='<p style="text-align:left"><b>Brief Help</b><br><i>See further down for Full Help and Terms of Use</i>\r<dl>\r<dt><span style="color:red">Scenario</span>\r<dd>Vic has been murdered. Each location specified contains one suspect and one potential weapon.<br>The murder location also contains Vic.<br>The murderer is in the same location as Vic, as is the murder weapon.\r<dt><span style="color:red">Objective</span>\r<dd>Find who killed Vic, with what, and where, by requesting clues from Sherlock.\r<dt><span style="color:red">How to begin</span>\r<dd>Tap the hotel image, or the Cast or Clues button.\r<dt><span style="color:red">Cast</span>\r<dd>A simple listing of all suspects, potential weapons and potential murder locations, plus Vic. No relationships implied by rows.\r<dt><span style="color:red">Clues</span>\r<dd><i>Person</i> : <i>Weapon</i> : <i>Place</i> represents three relationships<br>\r<i>- Person</i> is with <i>Weapon</i><br>\r<i>- Person</i> is in <i>Place</i><br>\r<i>- Weapon</i> is in <i>Place</i><br>\rThe score on the right tells tells you something about these relationships:<br>\r<span style="background-color:green">Y (3/3)</span>: All 3 relationships are true.<br> \r<span style="background-color:yellow">P (1/3)</span>: Only one of the 3 relationships is true.<br>\r<span style="background-color:red">N (0/3)</span>: None of the 3 relationships is true.<br>\rNote: A score of Y (3/3) does not imply that these are the murderer, murder weapon and murder location.<br>\rTap any item to ask Sherlock for a new clue associated with the item, if available, when viewing the Cast or Clues display.\r<dt><span style="color:red">Focus</span>\r<dd>Tap item to bring associated clues to top.\r<dt><span style="color:red">Answer</span>\r<dd>The Accused row has a finger on the right. Select any item to bring it into the Accused row. Once all three have been defined, tap Check to see whether your answer is correct or incorrect.  From there, use How buttons to get explanations, Facts button to see complete true facts, and Back to go back.<br>Note: Explanations may include clues you had not been given before tapping Check.  You can see all available clues by tapping Clues or Focus (after Check has been tapped).\r<dt><span style="color:red">Level</span>\r<dd>1 (easiest) to 3 (hardest).\r<dt><span style="color:red">New</span>\r<dd>Tap for new game.\r</dl>\r<p><b>Full Help</b>\r<p>Welcome to the Bates Hotel, the scene of a crime in which Vic has been killed.\r<p>The Crime Scene Investigation (CSI) team are in place, and the famous detective, Sherlock, has been \rcalled in to find out who murdered Vic, the victim.  Between the CSI team and Sherlock, a full picture \rhas now been built up and they know who killed Vic, what weapon was used, and the location in or around the hotel \rin which the murder took place.\r<p>The challenge for you, as Sherlock\'s assistant, is to work this out for yourself, based on clues that your mentor Sherlock has available to give to you.\r<p>In addition to the clues you are given, the following facts have been established:\r<ul>\r<li>The numbers of suspects, possible murder weapons, and possible murder locations are identical;\r<li>Any given possible murder location contains exactly one suspect and one possible murder weapon;\r<li>The victim, Vic, is also found in one of these locations, the murder location, and the suspect and possible murder weapon found in this murder \rlocation are the murderer and murder weapon.\r</ul>\r\r<p><b>Cast</b>\r\r<p>The people involved (the suspects and Vic), the possible murder weapons and possible murder locations are represented by graphical buttons.  The people have names and silhouettes (Vic has a body silhouette), the weapons are represented by pictures of themselves, while the \rlocations are represented by pictures of objects normally found in them, e.g. a dart board for the games room, a piano for the music room, or an iron for the laundry room.  All of these, the cast, are shown at the beginning of the game, after you tap the image of Bates Hotel, and may be redisplayed at any time by tapping on the <i>Cast</i> button.\r<p>Note: the rows of the Cast display do not imply any relationships between the people, weapons and places.\r<p>Note: the background colours have no meaning - they just help to differentiate the various objects of the same type.\r<p><b>Clues</b>\r\r<p>Clues are presented to you as triples of the form: <i>Person</i> : <i>Weapon</i> : <i>Place</i> followed by a score for that triple.  Now, triple <i>Person</i> : <i>Weapon</i> : <i>Place</i>\rrepresents three relationships:\r<ul>\r<li><i>Person</i> is with <i>Weapon</i>\r<li><i>Person</i> is in <i>Place</i>\r<li><i>Weapon</i> is in <i>Place</i>\r</ul>\r\r<p>Of these relationships, some may be true and some may not.  The score associated with the triple provides you information about these:\r<ul>\r<li>Y (3/3) (green background) : Yes, all three relationships are known to be true, i.e. the given <i>Person</i> is with the given <i>Weapon</i>, the given <i>Person</i> is in the given <i>Place</i>, and the given <i>Weapon</i> is in the given <i>Place</i>.\r<li>P (1/3) (yellow background) : Partly correct - only one of the three relationships is true; the other two are false.\r<li>N (0/3) (red background) : No, none of the three relationships is true.\r</ul>\r<p>Not surprisingly, Sherlock doesn\'t give you many clues with a Y score - that would be too easy - so most clues will have a score of P or N.\r<p>Note: A score of Y (3/3) for Tom : Hammer : Bathroom simply means that Tom is with the Hammer in the Bathroom.  It does not imply that Tom is the murderer.\r<p>Sherlock gives you one clue immediately - always associated with Vic, the victim, since you would normally try to find out Vic\'s location or the weapon found with Vic.\r<p>After that, you need to request a new clue by tapping a button representing a given person, weapon or place.  If a clue associated with that item is available, this will be displayed at the top of the list of clues, which will then be displayed to you.  You can request a clue from either the Cast or Clues display.  If no further associated clue is available, a brief message to this effect is displayed.\r<p>Please note that you may need to return to the Cast display (by tapping the <i>Cast</i> button) to find a button representing the person, weapon or place you are interested in following up on.  It is important to note that the killer, the murder weapon or murder location may not be mentioned directly\rin any available clues, since the logic you need to solve the crime may include elimination: e.g. if you are told explicitly that 5 out of 6 weapons are not in a given location, the 6th weapon must be there.\r<p>You can return to see the list of clues by tapping the <i>Clues</i> button.\r\r<p><b>Focus Clues</b>\r\r<p>The list of clues may become quite long.  To help you review all the clues related to a given item, you may tap the <i>Focus</i> button, then tap any item to bring all the clues associated with that item to the top of the list.\r<p>Don\'t forget to tap the <i>Clues</i> button once you have finished any reviewing or sorting, so that you can request further clues, as you can\'t request new clues from the <i>Focus Clues</i> display.\r\r<p><b>Answer</b>\r\r<p>Once you have enough information to determine all or part of the solution, you may tap the <i>Answer</i> button.  This takes you to the <i>Accuse</I> display, which initially shows you three grey buttons (Suspect, Weapon and Place) with a finger pointing at them.  This is the Accused row, which represents the murderer, the murder weapon and murder location that you are trying to find.  Beneath this is a cast list (all except Vic).  Tap any of these items to display them on the Accused row.  Note: you can also undo any accusation by tapping the relevant item in the Accused row, or by tapping a different item to replace the one already there.\r<p>You may move backwards and forwards between this display and other displays. This means that you can record your answer an item at a time, if you wish.\r<p>Once all three items have been selected for the Accused row, the finger changes to a <i>Check</i> button.  \r\r<p><b>Check</b>\r\r<p>Tapping the <i>Check</i> button effectively ends the game, since you are then informed of the correct answer and also told whether yours is correct or wrong.\r<p>Once the <i>Check</i> button has been tapped, if you look at the Clues display again, you will find that all the available clues that Sherlock was prepared to give you are now shown.  Those that you had not already been given are shown with lighter backgrounds.\r<p>As well as telling you whether your answer was correct or wrong, the Check display also shows you, at a high level, what was proved to reach the correct answer.  Each of these will have a <i>How</i> button next to it, which you may tap to see more detailed reasoning that led to this conclusion.\r<p>Here, and in lower-level explanations, you may find a conclusion with one of the three elements undefined, e.g. Tom : Weapon : Bathroom.  This simply means that we can prove Tom is in the Bathroom, regardless of which weapon is in there.\r\r<p><b>Explanation</b>\r\r<p>A typical explanation consists of the conclusion, followed by statements that were either available clues or were provable from the clues. By studying these, you should be able to see that the conclusion follows logically, given everything we know. The provable statements have a <i>How</i> button to their right.  You may continue to get explanations of how these can be proved by tapping these <i>How</i> buttons.  Tap the <i>Back</i> button next to a conclusion to return to the higher level explanation. \r<p>The explanation may make use of clues that you did not see before tapping the <i>Check</i> button - clues that were available, however, and which you can now see by tapping the <i>Clues</i> button.  As in the Clues display, the clues that you were not given are shown with a lighter background.\r<p>Note: you may find that you can find a simpler way to prove a statement than that provided.\r<p>After each explanation, you will also see a <i>Facts</i> button; tapping this shows you all the true facts, i.e. who was with which weapon and where.  Tap the <i>Back</i> button to return to the explanation.  Note that the available clues may not provide you with enough information to prove all of these.\r\r<p>Note: at any time after the <i>Check</i> button has been tapped, you may still tap the buttons at the top, e.g. <i>Clues</i>.  To return to the explanation, just tap the <i>Answer</i> button again, which will take you to the <i>Check</i> display, so that you can drill down further if you wish.\r\r\r<p><b>Countdown</b>\r\r<p>After you tap on the hotel image, or on any button in the second row, to begin the game properly, you will notice that a countdown begins in the top-right corner of the screen, with a green background.  This shows you how many seconds remain for you to find the solution in the suggested time.  Once zero has been reached, the background turns red and the countdown continues (now with negative numbers).  Once minus 999 has been reached, the countdown stops.\r<p>When you tap the <i>Check</i> button, this stops the countdown.  \r<p>The countdown is there purely as an incentive for you to reach the solution more quickly, and for you to measure your success against previous games.\r\r<p><b>Level</b>\r\r<p>The game has three levels of difficulty: 1 (easiest) through to 3 (hardest).  The difficulty level is increased both by increasing the number of cast members (level 1 has 5 suspects, weapons and places, level 2 has 6, and level 3 has 7), but also, more importantly, by deepening the level of reasoning required.\r\r<p>Each level also has a different countdown time associated with it (1 has the shortest time, 3 the longest).\r\r<p>Change the level, and hence the countdown time, for new games by tapping the <i>Level</i> button, and selecting the level.  There is also an \'?\' option, which means that the system will\rrandomly select the game level whenever a new game is begun.\r\r<p>The level for any game is shown with a yellow background between the <i>Level</i> button and the countdown display.\r\r<p><b>New</b>\r\r<p>You can start a new game at any time by tapping the <i>New</i> button.  If you haven\'t yet tapped the <i>Check</i> button for the current game, you will be asked to confirm the restart, in case you accidentally tapped the button.\r<p>To begin the game properly, and to set the countdown going, tap on the image of Bates Hotel, which opens up the Cast display, or on any of the second-row buttons.\r\r<p><b>Exiting</b>\r\r<p>Tap device back twice to exit.  The current game state is remembered so that you can continue when you open the game again. \r<p><b>About CSI Sherlock</b>\r\r<p>CSI Sherlock is an original game devised and developed by Dr. David Wolstenholme\r<p style="font-weight: bold;">Terms of use</p>\r<p>This software may be used for personal purposes only.  It may not be used for commercial purposes.</p>\r<p>The software, code and script of this application may not be copied or be distributed to others.</p>\r<p>The software, code and script may not be altered in any way.</p>\r<p >Copyright of the software, code and script, and its\rhelp\rdocumentation, is held by TopAccolades Limited. No part of\rthe software,\rcode, script or documentation may be copied or used in another application or\rdocument.</p>\r<p >Although\revery effort has been made to ensure that this software functions\ras intended, TopAccolades Limited provides no warranty of\rmerchantability, or\rfitness for a particular purpose, in relation to this application or\rits\rsupport.</p>\r<p >TopAccolades\rLimited shall not be liable for any damages whatsoever arising\rout of the use of or inability to use this application or the\rprovision of\ror failure\rto provide support.</p>\r<p style="font-style: italic;">Copyright TopAccolades Limited<br>www.topaccolades.com</p>\r\r'
sometext=sometext+'<p><br>Version '+appversion+'<br>'
sometext=sometext+'Scale: '+scalef
changetextvalue('output', sometext)
var someinstructions=''
if (gameon==0) {someinstructions='&nbsp;'}
changetextvalue('banner', 'CSI Sherlock: Help')
changetextvalue('instructions', someinstructions)


}

// page and remote ads

function openwebpage(someurl)
{
document.location.href=someurl
}

var displayadnum=0


var displayhelptexts=
[
'<table width=100% border=0 bgcolor="#FF8888"  onClick="openwebpage(\'market://search?q=pub:TopAccolades\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="csisherlock144.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*9)+'px">Tap <b>Help</b> for details of buttons and how to play.</td></tr></table>',
'<table width=100% border=0 bgcolor="lightblue" onClick="openwebpage(\'http://i.compactfun.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="compactfuniconlarge.png" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> i.compactfun.com</b><br>This app and other apps are also accessible online from many devices at i.compactfun.com</td></tr></table>',

''
]


var displayadtexts=displayhelptexts

var displayupgradetexts=
[
'<table width=100% border=0 bgcolor="#FF8888"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"   height="'+Math.floor(scalef*36)+'"><img src="csisherlock144.png" align=center valign=middle  width="'+Math.floor(scalef*40)+'"  height="'+Math.floor(scalef*40)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>CSI Sherlock -  Buy the inexpensive app now!</b><br>No ads or countdown ad breaks.</td></tr></table>'
]

var displayapptexts=
[
'<table width=100% border=0 bgcolor=limegreen onClick="openwebpage(\'market://details?id=com.topaccolades.xword4x4trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="xword4x4icon.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Xword<sup>4x4</sup> - Try the app now</b><br>Great Play & Pass crossword puzzle for up to 4 players. Define your own board layouts!</td></tr></table>',
'<table width=100% border=0 bgcolor=limegreen onClick="openwebpage(\'market://details?id=com.topaccolades.rummy7trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="rummyicon.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Rummy 7 -  Try the app now!</b><br>Play 7-card Rummy against the system or another player.  Full animation.</td></tr></table>',
'<table width=100% border=0 bgcolor="#FF8888" onClick="openwebpage(\'market://details?id=com.topaccolades.csisherlock2trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="csisherlock144.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>CSI Sherlock -  Try the app now!</b><br>Vic has been killed.  Try to solve who killed Vic, with what, and where, in this great interactive logic puzzle.</td></tr></table>',
'<table width=100% border=0 bgcolor=cyan onClick="openwebpage(\'market://details?id=com.topaccolades.kublitzcubetouch\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="kublitzcubeicon.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Kublitz Cube -  Download the app now!</b><br>Separated cubelets let you see/know all sides without turning the puzzle cube.  Guide, tools & notation to help you solve it</td></tr></table>',
'<table width=100% border=0 bgcolor=limegreen onClick="openwebpage(\'market://details?id=com.topaccolades.pegsolitairetouch\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="pegsolitaireicon.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Peg Solitaire -  Download the app now!</b><br>Play the full puzzle or a cut-down version.  Guide and notation to help you solve and remember the full puzzle</td></tr></table>',
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'market://details?id=com.topaccolades.compactfun2trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="compactfuniconlarge.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Compact Fun -  Try the app now!</b><br>31 classic/original games and puzzles in one app: words, numbers, logic, blocks, strategy...</td></tr></table>',
'<table width=100% border=0 bgcolor=cyan onClick="openwebpage(\'market://details?id=com.topaccolades.brainboxfun2lite\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="bbflogo.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>BrainBoxFun -  Try the app now!</b><br>10 brain-training exercises inc.: memory, verbal comprehension, pattern recognition, word power and mental arithmetic</td></tr></table>',
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'market://details?id=com.topaccolades.compactfun2trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="compactfuniconlarge.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Compact Fun -  Try the app now!</b><br>Includes Rummy, 4-in-a-line, Pentad, Letters & Numbers Games, Turncoat and Yak</td></tr></table>',
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'market://details?id=com.topaccolades.compactfun2trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="compactfuniconlarge.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Compact Fun -  Try the app now!</b><br>Includes Hangman, WordSearch, Pentad, Linkword Snap and Word Ladder</td></tr></table>',
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'market://details?id=com.topaccolades.compactfun2trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="compactfuniconlarge.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Compact Fun -  Try the app now!</b><br>Includes Step Challenge, Pyramid Numbers, Sudoku and Numberskull </td></tr></table>',
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'market://details?id=com.topaccolades.compactfun2trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="compactfuniconlarge.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Compact Fun -  Try the app now!</b><br>Includes Sudoku, Memory Pairs, Master Code, Mystery Clues and Bidinca </td></tr></table>',
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'market://details?id=com.topaccolades.compactfun2trial\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="compactfuniconlarge.png" align=center valign=middle  width="'+Math.floor(scalef*36)+'"  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Compact Fun -  Try the app now!</b><br>Includes Peg Solitaire, Towers of Hanoi, Poker Pentad, Mancala and Code 4x6 </td></tr></table>'

]

var displaywmltexts=
[

'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>Dedicate one of our many personal home pages to someone you love for a Birthday, Anniversary, Valentine\'s, Mother\'s Day or Father\'s Day.</td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>Our personal web site come in two parts:<br><b><span style="color:#FF0000">Defined by you</span>.<span style="color:green">Supplied by us</span></b></td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>The parts we supply include: <b><span style="color:green">best-wife-com</span>, <br><span style="color:green">best-husband.com</span>, <span style="color:green">best-lover.com</span>, <br><span style="color:green">sexiest-lover.com</span>, <span style="color:green">best-mother.com</span></span></b></td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>The parts we supply include: <b><span style="color:green"><span style="color:green">best-son.com</span>, <br><span style="color:green">best-daughter.com</span>, <span style="color:green">supremely.sexy</span>, <br><span style="color:green">best-mom-in-the-world.com</span>, <span style="color:green">best-dad.com</span></b></td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>You just supply a loved one\'s NAME:<br><b><span style="color:#FF0000">NAME</span>.<span style="color:green">best-wife.com</span>, <br><span style="color:#FF0000">NAME</span>.<span style="color:green">supremely.sexy</span>, <span style="color:#FF0000">NAME</span>.<span style="color:green">best-son.com</span></b></td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>Full examples: <b><span style="color:#FF0000">tim-wild</span>.<span style="color:green">best-husband.com</span>, <br><span style="color:#FF0000">lola</span>.<span style="color:green">supremely.sexy</span>, <br><span style="color:#FF0000">emma-dix</span>.<span style="color:green">best-daughter.com</span></b></td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>Other parts we supply include: <b><span style="color:green">in-the.land</span>, <br><span style="color:green">in-the-universe.com</span>, <span style="color:green">in-the-country.com</span>, <br><span style="color:green">on-the-planet.com</span></b></td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>With these ones you supply an OPINION or maybe a NAME plus an OPINION</td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br>Full examples: <b><span style="color:#FF0000">best-mom</span>.<span style="color:green">in-the.land</span>, <br><span style="color:#FF0000">jack-best-lover</span>.<span style="color:green">in-the-universe.com</span>, <br><span style="color:#FF0000">jane-greatest-wife</span>.<span style="color:green">on-the-planet.com</span></b></td></tr></table>',
'<table width=100% border=0 bgcolor="#FFCCCC" onClick="openwebpage(\'http://www.with-my-love.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="wmllogo.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b> With-my-love.com</b><br><span style="color:purple"><b>Imagine your loved one\'s thrill at seeing such a home page dedicated to them on the special day!</b></span></td></tr></table>'

]

function letterlookalikeads(somelist)
{
var sometext='<table width=100% cellspacing=0 cellpadding=0 border=0 bgcolor=lightblue onClick="openwebpage(\'http://www.letterlookalikes.com/\')"><tr><td align=center valign=middle  width=100%   height="'+Math.floor(scalef*36)+'"><table valign=middle align=center border=1 cellspacing=0 cellpadding=0><tr>'
for (var i=0; i<somelist.length; i++)
{
sometext=sometext+'<td valign=middle><img src="../alphabet/'+somelist[i]+'_colour.jpg" align=center valign=middle  width="'+Math.floor(scalef*20)+'"  height="'+Math.floor(scalef*30)+'"></td>'

}
sometext=sometext+'</tr></table></td></tr></table>'
return sometext

}

var displayllatexts=
[
letterlookalikeads(['L_1', 'E_7', 'T_2', 'T_2', 'E_4', 'R_5', 'S_2']),
letterlookalikeads(['plus_1', 'space_8', 'N_4', 'U_5', 'M_1', 'B_4', 'E_10', 'R_2', 'S_7']),
letterlookalikeads(['F_2', 'O0_4', 'R_1']),
letterlookalikeads(['B_1', 'I1_3', 'R_6', 'T_1', 'H_5', 'D_6', 'A_1', 'Y_3', 'S_10']),
letterlookalikeads(['A_6', 'N_1', 'D_2', 'space_5', 'M_4', 'O0_8', 'R_3', 'E_8']),
letterlookalikeads(['I1_2', 'love_3', 'Y_4', 'O0_5', 'U_7', 'space_4', 'X_7', 'X_7']),
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'http://www.letterlookalikes.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="../alphabet/love_2_colour.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px"><b>Letter Lookalikes</b><br>Photos resembling letters, numbers and symbols</td></tr></table>',
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'http://www.letterlookalikes.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="../alphabet/love_2_colour.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px">Frames for names and wishes for birthdays, anniversaries, Valentine\'s Day, Mother\'s Day, etc.</td></tr></table>',
'<table width=100% border=0 bgcolor=lightblue onClick="openwebpage(\'http://www.letterlookalikes.com/\')"><tr><td align=center valign=middle  width="'+Math.floor(scalef*36)+'"><img src="../alphabet/love_2_colour.jpg" align=center valign=middle  height="'+Math.floor(scalef*36)+'"></td><td style="text-align:center;font-size:'+Math.floor(scalef*8)+'px">Pictures that say 1000s of words<br><b>www.letterlookalikes.com</b></td></tr></table>'
]


if (adsrequired==1)
{
displayadtexts=
displayhelptexts.concat(displayupgradetexts).concat(displayllatexts).concat(displaywmltexts).concat(displayapptexts)
}
else
{
displayadtexts=displayhelptexts
}


function showcurrentad()
{
changetextvalue('currentadtext', currentadtext())
}

function increaseadnum()
{
displayadnum++
if (displayadnum>=displayadtexts.length) {displayadnum=0}
}

function currentadtext()
{
var somead=displayadtexts[displayadnum]
var sometext
if (somead=='')
{
sometext=''
}
else
{
sometext='<div style="width:100%;height:'+Math.floor(scalef*3)+'px"></div><table width=100% border=0 align=center bgcolor=silver><tr><td align=center>'+displayadtexts[displayadnum]+'</td></tr></table>'
}
increaseadnum()
return sometext
}

documentwrite('</div></td></tr></table></div>')



</script>

<script language="Javascript">


setupstatic()

var remoteads=[]

if (GetLocalVal('remoteads')==null)
{
// default remoteads
SetLocalVal('remoteads', 'remoteads=[]')

}
if (GetLocalVal('lastremoteadstime')==null) {SetLocalVal('lastremoteadstime', 0)}
// if (Date.now()-(1*GetLocalVal('lastremoteadstime'))>0)
if (Date.now()-(1*GetLocalVal('lastremoteadstime'))>(5*24*60*60*1000)) // if more than 5 days
{
changetextvalue('instructions',  '')

changetextvalue('output',  '<br><br><table width=80% height='+Math.floor(scalef*100)+' border=1 cellpadding=0 cellspacing=0  align=center bgcolor=white><tr><td><table width=100% border=0><tr><td  bgcolor=lemonchiffon height='+Math.floor(scalef*75)+' align=center valign=middle>Internet access is required for certain updates, which is currently not available.  Please tap the Reload button and a further attempt will be made after 24 hours.</td></tr><tr height='+Math.floor(scalef*3)+'><td></td></tr><tr><td><table border=0 align=center><tr><td onClick="location.reload()">'+graphicfor('Reload')+'</td></tr></table></td></tr></table></td></tr></table>')

SetLocalVal('lastremoteadstime', Date.now()-(4*24*60*60*1000)) // in case of problems loading, ensures that it will work for next day, as lasttime now set to 4 days ago, so can reload and it should work fine
documentwrite('<sc'+'ript src="http://www.compactfun.com/remoteads/largeadsuntimed.js"></sc'+'ript>')
}


</script>

</body></html>